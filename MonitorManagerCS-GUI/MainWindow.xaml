<Window
    x:Class="MonitorManagerCS_GUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrls="clr-namespace:MonitorManagerCS_GUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:livecharts="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
    xmlns:local="clr-namespace:MonitorManagerCS_GUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:MonitorManagerCS_GUI.ViewModels"
    Title="Nathan's Monitor Manager"
    Width="825"
    Height="500"
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel,
                                     IsDesignTimeCreatable=True}"
    AllowsTransparency="False"
    FontFamily="pack://application:,,,/Assets/Fonts/#Inter Variable"
    FontSize="14"
    ResizeMode="CanResize"
    WindowStyle="None"
    mc:Ignorable="d">

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="5"
            GlassFrameThickness="0" />
    </WindowChrome.WindowChrome>

    <Window.Icon>
        <BitmapImage UriSource="pack://application:,,,/Assets/icon.ico" />
    </Window.Icon>

    <Window.Resources>
        <!--  Styles  -->
        <Style x:Key="DisplayTabExitButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="#19000000" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0CFF0000" />
                    <Setter Property="Foreground" Value="#FFBF9E9E" />
                    <Setter Property="BorderBrush" Value="#8FFF8F8F" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="#FFB57777" />
                    <Setter Property="BorderThickness" Value="2" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="WindowStateButton" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Width" Value="45" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="#FF343434" />
            <Setter Property="FontFamily" Value="Segoe Fluent Icons" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#20000000" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="WindowMaximizeButton"
            BasedOn="{StaticResource WindowStateButton}"
            TargetType="Button">
            <Setter Property="Content" Value="&#xE922;" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#20000000" />
                </Trigger>
                <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                    <Setter Property="Content" Value="&#xE923;" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  Tab Templates  -->
        <DataTemplate DataType="{x:Type vm:DisplayTab}">
            <!--  Display Tab Content  -->
            <Border BorderBrush="LightGray" BorderThickness="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <!--  Window bar with X button  -->
                    <Grid Grid.Row="0" Margin="5">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Text="{Binding TabName}"
                            TextAlignment="Center" />
                        <Button
                            Width="30"
                            Height="30"
                            HorizontalAlignment="Right"
                            Command="{Binding ExitButtonCommand}"
                            Content="🗙"
                            Cursor="Hand"
                            Style="{StaticResource DisplayTabExitButton}" />
                    </Grid>

                    <!--  Menu Bar Separator  -->
                    <Separator
                        Grid.Row="1"
                        Margin="5"
                        Foreground="LightGray" />

                    <!--  VCP code automation editor  -->
                    <Grid Grid.Row="2" Margin="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <!--  Combobox and activation checkbox  -->
                        <Grid Grid.Row="0" Margin="5">
                            <StackPanel
                                Grid.Column="0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                                <ComboBox
                                    Grid.Column="0"
                                    Height="25"
                                    MaxWidth="200"
                                    ItemsSource="{Binding VCPCodeCharts}"
                                    SelectedItem="{Binding SelectedVCPCodeChart}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel DataContext="{Binding VCPController}" Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" />
                                                <TextBlock Text=" (" />
                                                <TextBlock Text="{Binding Code}" />
                                                <TextBlock Text=")" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <TextBlock Margin="5,5,0,5" Text="Automated?" />
                                <CheckBox
                                    Margin="5"
                                    DataContext="{Binding SelectedVCPCodeChart}"
                                    IsChecked="{Binding Enabled}" />
                            </StackPanel>

                            <Button
                                Grid.Column="0"
                                HorizontalAlignment="Right"
                                Command="{Binding SaveAndApplyCommand}"
                                Content="Save and Apply" />
                        </Grid>

                        <!--  Interactive Chart  -->
                        <Grid
                            Grid.Row="1"
                            Margin="5"
                            DataContext="{Binding SelectedVCPCodeChart}">

                            <livecharts:CartesianChart
                                MinWidth="740"
                                MinHeight="258"
                                Margin="5"
                                EasingFunction="{x:Null}"
                                IsEnabled="{Binding Enabled}"
                                PointerMoveCommand="{Binding PointerMovedCommand}"
                                PointerPressedCommand="{Binding PointerPressedCommand}"
                                PointerReleasedCommand="{Binding PointerReleasedCommand}"
                                Series="{Binding DraggableSeries}"
                                TooltipPosition="{Binding TooltipPos}"
                                XAxes="{Binding XAxes}"
                                YAxes="{Binding YAxes}" />

                            <!--  Rectangle that indicates the chart is disabled  -->
                            <Rectangle
                                Fill="Gray"
                                IsHitTestVisible="False"
                                Opacity="0.25"
                                Visibility="{Binding Enabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:SettingsTab}">
            <!--  Settings Tab Content  -->
            <TextBlock Text="{Binding Text}" />
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:DisplaysTab}">
            <TabControl
                BorderThickness="0"
                ItemsSource="{Binding Tabs}"
                SelectedIndex="{Binding SelectedTabIndex}"
                SelectedItem="{Binding SelectedTab}">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:DisplaySelector}">

            <!--  Debug Overlay For ExplorableCanvas  -->
            <AdornerDecorator>
                <!--  Display Selector  -->
                <ItemsControl ItemsSource="{Binding DisplayViewModels}">
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="ctrls:ExplorableCanvas.X" Value="{Binding ActualBounds.Left}" />
                            <Setter Property="ctrls:ExplorableCanvas.Y" Value="{Binding ActualBounds.Top}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ctrls:ExplorableCanvas ContentsPadding="50,130" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </AdornerDecorator>
        </DataTemplate>

        <!--  Other Templates  -->
        <DataTemplate DataType="{x:Type vm:DisplayViewModel}">
            <Border
                Width="{Binding ActualBounds.Width}"
                Height="{Binding ActualBounds.Height}"
                Background="{Binding Background}"
                BorderBrush="{Binding BorderBrush}"
                BorderThickness="{Binding BorderThickness}"
                CornerRadius="5">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseEnter">
                        <i:InvokeCommandAction Command="{Binding MouseEnterCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseUp">
                        <i:InvokeCommandAction Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Label}" />
            </Border>
        </DataTemplate>
    </Window.Resources>

    <DockPanel x:Name="MainDockPanel" Background="#FFF0F0F0">
        <!--  Menu bar and window buttons  -->
        <Grid
            Height="30"
            Margin="0,0,0,5"
            Background="Transparent"
            DockPanel.Dock="Top"
            MouseLeftButtonDown="Window_MouseLeftButtonDown">

            <!--  Menu Bar  -->
            <Menu
                Margin="0,5,0,0"
                HorizontalAlignment="Left"
                FontSize="16">
                <MenuItem Header="File">
                    <MenuItem Command="{Binding LoadDisplaysCommand}" Header="Reload Displays" />
                    <MenuItem Command="{Binding UpdateConfigsCommand}" Header="Update Old Configs" />
                </MenuItem>

                <MenuItem Header="Service">
                    <MenuItem Command="{Binding RestartServiceCommand}" Header="Restart Service" />
                    <MenuItem Command="{Binding StartServiceCommand}" Header="Start Service" />
                    <MenuItem Command="{Binding EndServiceCommand}" Header="End Service" />
                </MenuItem>
            </Menu>

            <!--  Window Buttons  -->
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

                <!--  Minimize  -->
                <Button
                    HorizontalAlignment="Right"
                    Click="MinimizeButton_Click"
                    Content="&#xE921;"
                    Style="{StaticResource WindowStateButton}" />

                <!--  Maximize  -->
                <Button
                    HorizontalAlignment="Right"
                    Click="MaximizeButton_Click"
                    Style="{StaticResource WindowMaximizeButton}" />

                <!--  Exit  -->
                <Button
                    HorizontalAlignment="Right"
                    Click="ExitButton_Click"
                    Content="&#xE8BB;"
                    Style="{StaticResource WindowStateButton}" />

            </StackPanel>
        </Grid>

        <!--  Main Content  -->
        <TabControl
            DockPanel.Dock="Bottom"
            ItemsSource="{Binding Tabs}"
            SelectedIndex="{Binding SelectedTabIndex}"
            SelectedItem="{Binding SelectedTab}">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <!--  Tab Header  -->
                    <TextBlock Text="{Binding TabName}" />
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>
    </DockPanel>

</Window>
